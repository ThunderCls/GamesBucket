@using GamesBucket.Shared.Helpers
@model PagedResult<GamesBucket.DataAccess.Models.Game>

@{
    ViewData["Title"] = "Games List";
}

<!-- page title -->
<section class="section section--first section--last section--head" data-bg="img/bg.jpg">
	<div class="container">
		<div class="row">
			<div class="col-12">
				<div class="section__wrap">
					<!-- section title -->
					<h2 class="section__title">Catalog <span>(@Model.Results.Count games)</span></h2>
					<!-- end section title -->

					<!-- breadcrumb -->
					<ul class="breadcrumb">
						<li class="breadcrumb__item"><a asp-controller="Home" asp-action="Index">Home</a></li>
						<li class="breadcrumb__item breadcrumb__item--active">Catalog</li>
					</ul>
					<!-- end breadcrumb -->
				</div>
			</div>
		</div>
	</div>
</section>
<!-- end page title -->

<!-- section -->
<section class="section section--last section--catalog">
	<div class="container">
		@if (@Model.Results.Any())
		{
			<!-- catalog -->
			<div class="row catalog">
				<!-- filter wrap -->
				<div class="col-12 col-lg-20">
					<div class="row">
						<div class="col-12">
							<div class="filter-wrap">
								<button class="filter-wrap__btn" type="button" data-toggle="collapse" data-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">Open filter</button>

								<div class="collapse filter-wrap__content" id="collapseFilter">
									<!-- filter -->
									<div class="filter">
										<h4 class="filter__title">Filters <button type="button" onclick="resetCatalogFilters()">Clear all</button></h4>

										<div class="filter__group">
											<label for="keywords" class="filter__label">Keyword</label>
											<input type="text" name="keywords" id="keywords" class="filter__input" placeholder="Keyword">
											@* onkeyup="applyCatalogFilters(this)" *@
										</div>

										<div class="filter__group">
											<label for="completion-status" class="filter__label">Completion Status</label>
                                                                                
											<div class="filter__select-wrap">
												<select name="completion-status" id="completion-status" class="filter__select">
													<option value="0">All</option>
													<option value="1">Incomplete</option>
													<option value="2">Completed</option>
												</select>
											</div>
										</div>
										
										<div class="filter__group">
											<label for="favorite-status" class="filter__label">Favorite Status</label>

											<div class="filter__select-wrap">
												<select name="favorite-status" id="favorite-status" class="filter__select">
													<option value="0">All</option>
													<option value="1">Favorites</option>
													<option value="2">Non-Favorites</option>
												</select>
											</div>
										</div>

										<div class="filter__group">
											<label class="filter__label">Hours</label>
                                        
											<div class="filter__range">
												<div id="filter__range-start"></div>
												<div id="filter__range-end"></div>
											</div>
                                        
											<div id="filter__range"></div>
										</div>

										<div class="filter__group">
											<div class="filter-btns col-12 mb-2">
												<label class="filter__label">Genres</label>
												<button type="button" onclick="clearCatalogGenresFilters()" id="filter-action" class="mr-2">Clear all</button>
												<button type="button" onclick="selectAllCatalogGenresFilters()" id="filter-action">Select all</button>
											</div>
											<ul class="filter__checkboxes" id="genres-filters">
											</ul>
										</div>
										
										<div class="filter__group">
											<label for="page-size" class="filter__label">Page Size</label>
                                                                                
											<div class="filter__select-wrap">
												<select name="page-size" id="page-size" class="filter__select">
													<option value="12">12</option>
													<option value="24">24</option>
													<option value="48">48</option>
													<option value="64">64</option>
												</select>
											</div>
										</div>
										
										<h4 class="filter__title">Order by <button type="button" onclick="resetCatalogFilters()">Clear all</button></h4>
										
										<div class="catalog-order-by-filters col-12 mb-5" style="padding: 0; margin: 0;">
											<div class="filter__group">
												<label for="sort-release-time" class="filter__label">Release Date</label>
                                            
												<div class="filter__select-wrap">
													<select onchange="resetCatalogOrderFilters(this)" name="sort-release-time" id="sort-release-time" class="filter__select">
														<option value="0">None</option>
														<option value="1">Newest</option>
														<option value="2">Oldest</option>
													</select>
												</div>
											</div>

											<div class="filter__group">
												<label for="sort-beat-time" class="filter__label">Beat Time</label>
                                            
												<div class="filter__select-wrap">
													<select onchange="resetCatalogOrderFilters(this)" name="sort-beat-time" id="sort-beat-time" class="filter__select">
														<option value="0">None</option>
														<option value="1">Longest</option>
														<option value="2">Shortest</option>
													</select>
												</div>
											</div>

											<div class="filter__group">
												<label for="sort-game-score" class="filter__label">Game Score</label>
                                                                                    
												<div class="filter__select-wrap">
													<select onchange="resetCatalogOrderFilters(this)" name="sort-game-score" id="sort-game-score" class="filter__select">
														<option value="0">None</option>
														<option value="1">Highest</option>
														<option value="2">Lowest</option>
													</select>
												</div>
											</div>
										</div>
										
										<div class="filter__group">
											@* <button class="filter__btn" type="button" onclick="applyCatalogFilters()">APPLY FILTER</button> *@
											<button class="filter__btn" type="button" onclick="getGamesPage()">APPLY FILTER</button>
										</div>
									</div>
									<!-- end filter -->
								</div>
							</div>
						</div>
					</div>
				</div>
				<!-- end filter wrap -->

				<!-- content wrap -->
				<div class="col-12 col-lg-80">
					<div class="row" id="result-container">
						<partial name="_CardsContainerPartial" model="Model"/>
					</div>
				</div>
				<!-- end content wrap -->
			</div>
			<!-- end catalog -->
			<!-- floating action button -->
			<ul id="menu" class="mfb-component--br mfb-zoomin" data-mfb-toggle="hover">
				<li class="mfb-component__wrap">
					<a href="#" class="mfb-component__button--main">
						<i class="mfb-component__main-icon--resting fa fa-ellipsis-h"></i>
						<i class="mfb-component__main-icon--active fa fa-ellipsis-h"></i>
					</a>
					<ul class="mfb-component__list">
						<li>
							<a asp-controller="Home" asp-action="New" data-mfb-label="Add New Game" class="mfb-component__button--child">
								<i class="mfb-component__child-icon fa fa-plus"></i>
							</a>
						</li>
					</ul>
				</li>
			</ul> 			
		}
		else
		{
			<div class="row mt-5">
				<div class="col-md-12 mt-5 d-flex justify-content-center">
					<i class="fa fa-search not-found-icon" aria-hidden="true"></i>
					<span class="not-found-text">Empty</span>
				</div>
			</div>
			<div class="row d-flex justify-content-center">
				<div class="col-md-3">
					<a class="sign__btn" asp-controller="Home" asp-action="New">Add New</a>
				</div>
			</div>
		}
	</div>
</section>
<!-- end section -->

<script >
	loadGenresFilters(7);
	
	async function loadGenresFilters(limit) {
		let url = location.origin;
		try {
			let result = await fetch(`${url}/catalog/activegenres`);
			if (result.status !== 200) return;
	
			let genresList = document.querySelector('ul.filter__checkboxes');
			genresList.innerHTML = '';
	
			let jsonGenres = await result.json();
			let typeString = 0;
			jsonGenres.suggestions.every(genre => {
				typeString++;
				let html = `<input id="type${typeString}" type="checkbox" name="type${typeString}" checked="" data-value="${genre}">
							<label for="type${typeString}">${genre}</label>`
				let item = document.createElement('li');
				item.innerHTML = html;
				genresList.append(item);
				return true;
			});
			
			let item = document.createElement('div');
            item.classList.add('mt-3');
							
			if (limit > 0) {				
				item.innerHTML = '<button type="button" id="filter-action" onclick="loadGenresFilters()">Show All</button>';
				genresList.append(item);

				let genresBoxes = document.querySelectorAll('ul#genres-filters > li');				
				Array.from(genresBoxes).slice(limit).forEach(checkBox => {
					checkBox.style.display = 'none';
				});
				
			} else {
				item.innerHTML = '<button type="button" id="filter-action" onclick="loadGenresFilters(7)">Show Less</button>';
				genresList.append(item);
				
				let genresBoxes = document.querySelectorAll('ul#genres-filters > li');				
				Array.from(genresBoxes).slice(limit).forEach(checkBox => {
					checkBox.style.display = 'block';
				});
			}
			
		} catch (error) {
			console.log(error)
		}
	}	
</script>