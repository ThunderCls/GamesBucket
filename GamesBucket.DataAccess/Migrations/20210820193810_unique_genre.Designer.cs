// <auto-generated />
using System;
using GamesBucket.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GamesBucket.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210820193810_unique_genre")]
    partial class unique_genre
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("GameGenres", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenresGenreId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GamesId", "GenresGenreId");

                    b.HasIndex("GenresGenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("GamesBucket.DataAccess.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AboutTheGame")
                        .HasColumnType("TEXT");

                    b.Property<string>("BackgroundImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("BoxImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("BoxImageHLTB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DetailedDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Developers")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Favorite")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<double>("GameplayCompletionist")
                        .HasColumnType("REAL");

                    b.Property<double>("GameplayMain")
                        .HasColumnType("REAL");

                    b.Property<double>("GameplayMainExtra")
                        .HasColumnType("REAL");

                    b.Property<string>("HeaderImage")
                        .HasColumnType("TEXT");

                    b.Property<bool>("InCatalog")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Linux")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Mac")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MetaCriticScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MetaCriticUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Played")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("TEXT");

                    b.Property<uint>("SteamAppId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("SteamScore")
                        .HasColumnType("REAL");

                    b.Property<string>("SupportedLanguages")
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Windows")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SteamAppId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GamesBucket.DataAccess.Models.Genres", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("GenreId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("GamesBucket.DataAccess.Models.Movies", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Webm")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieId");

                    b.HasIndex("GameId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("GamesBucket.DataAccess.Models.Screenshots", b =>
                {
                    b.Property<int>("ScreenshotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PathFull")
                        .HasColumnType("TEXT");

                    b.Property<string>("PathThumbnail")
                        .HasColumnType("TEXT");

                    b.HasKey("ScreenshotId");

                    b.HasIndex("GameId");

                    b.ToTable("Screenshots");
                });

            modelBuilder.Entity("GamesBucket.DataAccess.Models.SteamLibrary", b =>
                {
                    b.Property<uint>("SteamAppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SteamAppId");

                    b.HasIndex("Name");

                    b.ToTable("SteamLibraries");
                });

            modelBuilder.Entity("GameGenres", b =>
                {
                    b.HasOne("GamesBucket.DataAccess.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamesBucket.DataAccess.Models.Genres", null)
                        .WithMany()
                        .HasForeignKey("GenresGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamesBucket.DataAccess.Models.Movies", b =>
                {
                    b.HasOne("GamesBucket.DataAccess.Models.Game", null)
                        .WithMany("Movies")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamesBucket.DataAccess.Models.Screenshots", b =>
                {
                    b.HasOne("GamesBucket.DataAccess.Models.Game", null)
                        .WithMany("Screenshots")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamesBucket.DataAccess.Models.Game", b =>
                {
                    b.Navigation("Movies");

                    b.Navigation("Screenshots");
                });
#pragma warning restore 612, 618
        }
    }
}
